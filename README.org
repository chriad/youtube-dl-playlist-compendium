#+TITLE: The youtube-dl playlist compendium
#+SUBTITLE: Save a local copy of a youtube playlist and integrate with jellyfin

Requirements:
- access to youtube
- ytcc (optional)
- ffmpeg
- youtube-dl
- emby/yellyfin (optional)

The available metadata dependes on the extractor. I have an additional level of control if I can extract metadata from video titles that might not be captured by the extractor. ll

In fact, every set of videos can be downloaded as a playlist, because all videos form a channel are a playlist themself (names "Uploads from <channel name>"), and youtube-dl can arbitrarily filter this list. So a playlist is not just what that uploader has defined as a playlist, but what you choose to be.

First just download the titles of the playlist:
#+begin_src bash :results value verbatim :format: raw
youtube-dl --get-title PLzH6n4zXuckpfMu_4Ff8E7Z1behQks5ba
#+end_src

#+RESULTS:
: 0
Data Analysis 0: Introduction to Data Analysis - Computerphile
Data Analysis 1: What is Data? - Computerphile
Data Analysis 2: Data Visualisation - Computerphile
Data Analysis 3: Cleaning Data - Computerphile
Data Analysis 4: Data Transformation - Computerphile
Data Analysis 5: Data Reduction - Computerphile
Data Analysis 6: Principal Component Analysis (PCA) - Computerphile
Data Analysis 7: Clustering - Computerphile
Data Analysis 8: Classifying Data - Computerphile
Data Analysis 9: Data Regression - Computerphile

Now use this for `--metadata-from-title`

#+begin_src bash 
youtube-dl --get-filename https://www.youtube.com/playlist?list=PLzH6n4zXuckpfMu_4Ff8E7Z1behQks5ba -o '/media/chriad/YOUTUBE-dl/YOUTUBE-PLAYLISTS/%(channel)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s'
#+end_src

Now use this output for `--exec ... {}` to remove unnecessary stuff from filename.

Look at embedded metadata:

#+begin_src bash 
ffmpeg -i 'The Privacy Tax - How tracking and hacking affect disabled people, and what we can do about it.mkv' -f ffmetadata - 2> /dev/null
#+end_src

* xattrs
https://www.freedesktop.org/wiki/CommonExtendedAttributes/

Maybe conform to jellyfin naming?

#+begin_src bash
youtube-dl --get-filename https://www.youtube.com/playlist?list=PLzH6n4zXuckpfMu_4Ff8E7Z1behQks5ba -o '/media/chriad/YOUTUBE-dl/YOUTUBE-PLAYLISTS/%(channel)s/%(playlist)s - S01E%(playlist_index)s - %(title)s.%(ext)s'
#+end_src

Case study: using `--metadata-from-title`

What metadata can we extract?
youtube-dl -j

To look for metadata in the json file, I can highly recommand [[https://developer.github.com/v3/repos/statistics/][jid]] bla.

** Making youtube-dl playlists work with jellyfin

# complete playlist metadate
youtube-dl --dump-single-json `ytcc -o xsv subscriptions -a name,url | grep 'Mastering'|cut -f2 -d','` | jid

youtube-dl --dump-single-json --sub-lang en `ytcc -o xsv subscriptions -a name,url | grep 'Mastering'|cut -f2 -d','` | jq '.entries[].upload_date'

# merge per file metadata
cat *.info.json | json --group | jq '.[].upload_date' 

** nfo


** Projects of interest
- https://github.com/ankenyr/jellyfin-youtube-metadata-plugin.git
- https://stackoverflow.com/a/67144906/2376000 -> another degree of freedem by calling youtube-dl multiple times in one shell script

** Introduce this concept
static playlist: will not be updated: e.g. conference
dynamic, will be updated

youtube-dl --no-warnings --get-url https://hpc.guix.info/events/2021/atelier-reproductibilit%C3%A9-environnements/ | wget -i -

cat urls.txt | ./download-series-from-url-file.sh '<name der Serie>'

Why not completely in ytcc?

1. does not work with playlist name, gives NA
2. does not work with e.g. write_info_json and many more ytdl options

** ytcc
`ytcc -o xsv subscriptions -a name,url | grep 'hanselmann'|cut -f2 -d','`

look at the emby log
tail -f /var/lib/emby/logs/embyserver.txt

ffprobe -i "/media/chriad/lenovo/emby-test/Scott Hanselman/Computer Stuff They Didn't Teach You/What's a Carriage and Who's Feeding it Lines CRLF - Computer Stuff They Didn't Teach You #1.mkv" -threads 0 -v info -print_format json -show_streams -show_chapters -show_format -show_data |fx

does not work:
--postprocessor-args \"-metadata episode_id=%(title)s\"

does not work:
--metadata-from-title '%(playlist)s - (?P<title>.+) by (?P<artist>.+)'
but:
--metadata-from-title '%(playlist)s - %(title)s by %(artist)s'

** switch emby to jellyfin
systemctl start emby-server.service
shutdown with gui
service jellyfin start

** rename
/snap/core20/1169/usr/bin/rename.ul -nv 'Il Ã©tait une fois... la vie -' '' ./*
